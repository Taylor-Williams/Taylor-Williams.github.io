---
layout: post
title:      "Object Oriented Scaffolding"
date:       2018-05-12 17:08:08 +0000
permalink:  object_oriented_scaffolding
---


I remember on my first rodeo of doing object oriented programming i was getting really frustrated and confused. Why do all these things need to tie into each other, what in the world does scope mean, why can't everyone take everyone else's variables... the objects were being stupid, not me of course. Then the more i got to play around, as i saw how recursion worked, as i understood how powerful things can be when you start adding it all together with data structures... it's hard not to be amazed. There's so much that you can build and it can all be optimized depending on what problems you're looking to solve. and it comes from such basic knowledge, too! I mean the concepts of methods, scope, data structures, they don't come naturally. But when you finish one and see how it fits into the puzzle of it all, it feels like learning one thing has allowed you to build six more things! which in turn helps on another 10!  The compounding effect of your effectiveness of knowledge is incredible, and it's all thanks to this abstract concept of everything being an object. Even though when you're trying to tell your friends that everything is an "object" there's no way for them to understand the abstractness you're talking about. "The hell do you mean it's and object. everything is an object". Well that's exactly the point isnt it! "Yes but if everything is an object it's useless to describe things as an object". Yes, it would seem so at first. But everything that's been abstracted can be given their unique properties. Clothing is just a collection of characteristics given to objects. In high fassion, for example, most of the things you see don't seem like clothing. But to the designers it's the *epitome* of clothing. That doesn't mean that one of the two of you is right, it just means that their understanding of the topic is more **abstract** than yours. And because they are able to understand the unique properties that defines "clothing" they can really search for the boundaries that you don't know existed in the first place! In many ways object oriented programming can be similar, it's just knowing how to set up the problem and describe it that confuses people who are unfamiliar with the concept.
